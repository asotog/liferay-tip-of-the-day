/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rivetlogic.services.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.rivetlogic.services.model.TipsOfTheDayVisited;
import com.rivetlogic.services.model.TipsOfTheDayVisitedModel;
import com.rivetlogic.services.model.TipsOfTheDayVisitedSoap;
import com.rivetlogic.services.service.persistence.TipsOfTheDayVisitedPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TipsOfTheDayVisited service. Represents a row in the &quot;rivetlogic_tipday_TipsOfTheDayVisited&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link TipsOfTheDayVisitedModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TipsOfTheDayVisitedImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TipsOfTheDayVisitedImpl
 * @see TipsOfTheDayVisited
 * @see TipsOfTheDayVisitedModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class TipsOfTheDayVisitedModelImpl extends BaseModelImpl<TipsOfTheDayVisited>
	implements TipsOfTheDayVisitedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a Tips of the Day Visited model instance should use the {@link TipsOfTheDayVisited} interface instead.
	 */
	public static final String TABLE_NAME = "rivetlogic_tipday_TipsOfTheDayVisited";
	public static final Object[][] TABLE_COLUMNS = {
			{ "userId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "tipId", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("tipId", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table rivetlogic_tipday_TipsOfTheDayVisited (userId LONG not null,companyId LONG not null,groupId LONG not null,tipId VARCHAR(75) not null,primary key (userId, companyId, groupId, tipId))";
	public static final String TABLE_SQL_DROP = "drop table rivetlogic_tipday_TipsOfTheDayVisited";
	public static final String ORDER_BY_JPQL = " ORDER BY tipsOfTheDayVisited.id.userId ASC, tipsOfTheDayVisited.id.companyId ASC, tipsOfTheDayVisited.id.groupId ASC, tipsOfTheDayVisited.id.tipId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY rivetlogic_tipday_TipsOfTheDayVisited.userId ASC, rivetlogic_tipday_TipsOfTheDayVisited.companyId ASC, rivetlogic_tipday_TipsOfTheDayVisited.groupId ASC, rivetlogic_tipday_TipsOfTheDayVisited.tipId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.rivetlogic.services.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.rivetlogic.services.model.TipsOfTheDayVisited"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.rivetlogic.services.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.rivetlogic.services.model.TipsOfTheDayVisited"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.rivetlogic.services.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.rivetlogic.services.model.TipsOfTheDayVisited"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long USERID_COLUMN_BITMASK = 4L;
	public static final long TIPID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TipsOfTheDayVisited toModel(TipsOfTheDayVisitedSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TipsOfTheDayVisited model = new TipsOfTheDayVisitedImpl();

		model.setUserId(soapModel.getUserId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setTipId(soapModel.getTipId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TipsOfTheDayVisited> toModels(
		TipsOfTheDayVisitedSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TipsOfTheDayVisited> models = new ArrayList<TipsOfTheDayVisited>(soapModels.length);

		for (TipsOfTheDayVisitedSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.rivetlogic.services.service.util.ServiceProps.get(
				"lock.expiration.time.com.rivetlogic.services.model.TipsOfTheDayVisited"));

	public TipsOfTheDayVisitedModelImpl() {
	}

	@Override
	public TipsOfTheDayVisitedPK getPrimaryKey() {
		return new TipsOfTheDayVisitedPK(_userId, _companyId, _groupId, _tipId);
	}

	@Override
	public void setPrimaryKey(TipsOfTheDayVisitedPK primaryKey) {
		setUserId(primaryKey.userId);
		setCompanyId(primaryKey.companyId);
		setGroupId(primaryKey.groupId);
		setTipId(primaryKey.tipId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new TipsOfTheDayVisitedPK(_userId, _companyId, _groupId, _tipId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((TipsOfTheDayVisitedPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return TipsOfTheDayVisited.class;
	}

	@Override
	public String getModelClassName() {
		return TipsOfTheDayVisited.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("userId", getUserId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("tipId", getTipId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		String tipId = (String)attributes.get("tipId");

		if (tipId != null) {
			setTipId(tipId);
		}
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public String getTipId() {
		if (_tipId == null) {
			return StringPool.BLANK;
		}
		else {
			return _tipId;
		}
	}

	@Override
	public void setTipId(String tipId) {
		_tipId = tipId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public TipsOfTheDayVisited toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TipsOfTheDayVisited)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TipsOfTheDayVisitedImpl tipsOfTheDayVisitedImpl = new TipsOfTheDayVisitedImpl();

		tipsOfTheDayVisitedImpl.setUserId(getUserId());
		tipsOfTheDayVisitedImpl.setCompanyId(getCompanyId());
		tipsOfTheDayVisitedImpl.setGroupId(getGroupId());
		tipsOfTheDayVisitedImpl.setTipId(getTipId());

		tipsOfTheDayVisitedImpl.resetOriginalValues();

		return tipsOfTheDayVisitedImpl;
	}

	@Override
	public int compareTo(TipsOfTheDayVisited tipsOfTheDayVisited) {
		TipsOfTheDayVisitedPK primaryKey = tipsOfTheDayVisited.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TipsOfTheDayVisited)) {
			return false;
		}

		TipsOfTheDayVisited tipsOfTheDayVisited = (TipsOfTheDayVisited)obj;

		TipsOfTheDayVisitedPK primaryKey = tipsOfTheDayVisited.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		TipsOfTheDayVisitedModelImpl tipsOfTheDayVisitedModelImpl = this;

		tipsOfTheDayVisitedModelImpl._originalUserId = tipsOfTheDayVisitedModelImpl._userId;

		tipsOfTheDayVisitedModelImpl._setOriginalUserId = false;

		tipsOfTheDayVisitedModelImpl._originalCompanyId = tipsOfTheDayVisitedModelImpl._companyId;

		tipsOfTheDayVisitedModelImpl._setOriginalCompanyId = false;

		tipsOfTheDayVisitedModelImpl._originalGroupId = tipsOfTheDayVisitedModelImpl._groupId;

		tipsOfTheDayVisitedModelImpl._setOriginalGroupId = false;

		tipsOfTheDayVisitedModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TipsOfTheDayVisited> toCacheModel() {
		TipsOfTheDayVisitedCacheModel tipsOfTheDayVisitedCacheModel = new TipsOfTheDayVisitedCacheModel();

		tipsOfTheDayVisitedCacheModel.tipsOfTheDayVisitedPK = getPrimaryKey();

		tipsOfTheDayVisitedCacheModel.userId = getUserId();

		tipsOfTheDayVisitedCacheModel.companyId = getCompanyId();

		tipsOfTheDayVisitedCacheModel.groupId = getGroupId();

		tipsOfTheDayVisitedCacheModel.tipId = getTipId();

		String tipId = tipsOfTheDayVisitedCacheModel.tipId;

		if ((tipId != null) && (tipId.length() == 0)) {
			tipsOfTheDayVisitedCacheModel.tipId = null;
		}

		return tipsOfTheDayVisitedCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{userId=");
		sb.append(getUserId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", tipId=");
		sb.append(getTipId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.rivetlogic.services.model.TipsOfTheDayVisited");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipId</column-name><column-value><![CDATA[");
		sb.append(getTipId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = TipsOfTheDayVisited.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			TipsOfTheDayVisited.class
		};
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private String _tipId;
	private long _columnBitmask;
	private TipsOfTheDayVisited _escapedModel;
}